import requests
from pprint import pprint
class ReportGenerator:
    def __init__(self, api_token, report_id = None) -> None:
        self.api_token = api_token
        self.report_results = None
        self.report_id = report_id
        self.report_state = None
        self.base_url = 'http://utk.curriculog.com:443'
        pass
    def run_report(self, report_name):
        """Takes a given report name available within the Curriculog API and submits a request to run the report."""
        headers = {
            'Content-Type': 'application/json',
            'Authorization': f'Bearer {self.api_token}'
        }
        if report_name == 'proposal_report':
            api_endpoint = '/api/v1/reports/proposal/'
        
      

        url = f'{self.base_url}{api_endpoint}'
        print(f'URL: {url}, Headers: {headers}')
        #requests.head(allow_redirects=True)
        report_request = requests.post(url=url, headers=headers, allow_redirects=True)
        print(report_request.headers)
        print(f'Report request: {report_request}')
        print(report_request.text)
        pprint(vars(report_request))
        # for h in report_request.history:
        #     print('/******* HISTORY ENTRY *********** \n')
        #     pprint(vars(h))
        
    def get_report_state(self):
        """Queries the Curriculog API to return the state of a given report. Reports may be in a QUEUED, RUNNING, or ERROR state."""
    def get_report_results(self):
        """Stores and returns the results for a Curriculog API."""
        # while self.report_state is None or self.report_state != ''
